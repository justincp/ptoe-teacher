@page "/"
@layout MainLayout
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using PTOEQuiz.Services;
@inject GameState GameState



<div class="main">
<h1>Welcome to the Periodic Table of Elements Teacher</h1>
<ol>

    <li>Learn as many elements as you can within the time limit.</li>
    <li>Please only take the quiz one time.</li>
    <li>Please do not discuss the experience with others who have not taken the quiz.</li> 
        <li>
            Please make sure your computer sound is working.
        </li>
</ol>
    <audio src="/sound/Imagination-AShamaluevMusic.mp3" autoplay controls />
    
    @if (!GameState.gameFinished)
    {
        <h3>What is your name?</h3>
        <input type="text" @bind-value="name" />
        @if (name != "")
        {
            <button class="checkout-button btn btn-warning" @onclick="StartQuiz">
                Start quiz
            </button>
        }
   
    } else
    {
        <h2>Thank you for participating.</h2>
        <h3>You learned @GameState.game.TotalMastered() elements.</h3>
    }

</div>

@if (GameState.ShowingConfigureDialog)
{
    <!--QuizDialog Question="game.Question"
            OnCancel="GameState.CancelConfigurePizzaDialog"
            OnConfirm="GameState.ConfirmConfigurePizzaDialog" /-->


    <QuizDialog
      Question="GameState.Question"
      OnCancel="GameState.CancelConfigurePizzaDialog"
      OnConfirm="GameState.ConfirmConfigurePizzaDialog"
      OnKeyDown="GameState.OnKeyDown"
      Game="GameState.game"
      GameOver="GameState.GameOver"
      />

}

@if (GameState.ShowingResponseDialog)
{
    <!--QuizDialog Question="game.Question"
            OnCancel="GameState.CancelConfigurePizzaDialog"
            OnConfirm="GameState.ConfirmConfigurePizzaDialog" /-->


    <ResponseDialog
      Question="GameState.Question"
      OnCancel="GameState.CancelConfigurePizzaDialog"
      OnConfirm="GameState.ConfirmConfigurePizzaDialog"
      OnKeyDown="GameState.OnKeyDown"
      Game="GameState.game"
      />

}



@code {

    public string name = "";
    

    protected override async Task OnInitializedAsync()
    {


    }

    protected async Task StartQuiz()
    {
        GameState.ShowQuizDialog();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) //TODO: don't think this needs to be its own function
    {
        if (firstRender)
        {
            GameState.game = new GameManager();
            GameState.game.NextQuestion();
            GameState.Question = GameState.game.Question;
        }

        if (GameState.gameFinished)
        { await StoreGame();
            GameState.gameFinished = false;
        }



    }

        async Task StoreGame()
        {
            GameResult result = new GameResult();
            result.Name = name;
            result.Mastered = GameState.game.TotalMastered();
            result.GameMode = GameState.game.POSITIVE_MODE;
            var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "game", result);
            var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        }


}
		